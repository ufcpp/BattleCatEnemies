@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using BattleCatStageFinder.PageModels
@inject BattleCat.StageFinder finder

<h1>@finder.Story.Name からのステージ検索</h1>

<h2>検索条件</h2>

@*
↓コントロール化したい。
*@

<div>
    <span style="font-weight:bold;">1体目</span>
    <span style="font-size:x-small;color:#727272;">条件:</span>
    <input style="width:8em" type="text" @bind-value="@_model.Options1.Filter" />
    <span style="font-size:x-small;color:#727272;">選択:</span>
    <input type="text" @bind-value="@_model.Options1.SelectedValue" list="options1" />
    <datalist id="options1">
        @foreach (var x in _model.Options1.Options)
        {
            <option value="@x.Name" disabled="@x.Disabled" />
        }
    </datalist>
</div>
<div>
    <span style="font-weight:bold;">2体目</span>
    <span style="font-size:x-small;color:#727272;">条件:</span>
    <input style="width:8em" type="text" @bind-value="@_model.Options2.Filter" />
    <span style="font-size:x-small;color:#727272;">選択:</span>
    <input type="text" @bind-value="@_model.Options2.SelectedValue" list="options2" />
    <datalist id="options2">
        @foreach (var x in _model.Options2.Options)
        {
            <option value="@x.Name" disabled="@x.Disabled" />
        }
    </datalist>
</div>
<div>
    <span style="font-weight:bold;">3体目</span>
    <span style="font-size:x-small;color:#727272;">条件:</span>
    <input style="width:8em" type="text" @bind-value="@_model.Options3.Filter" />
    <span style="font-size:x-small;color:#727272;">選択:</span>
    <input type="text" @bind-value="@_model.Options3.SelectedValue" list="options3" />
    <datalist id="options3">
        @foreach (var x in _model.Options3.Options)
        {
            <option value="@x.Name" disabled="@x.Disabled" />
        }
    </datalist>
</div>

@*
<p>
    表示個数 <input type="number" @bind-value="@_model.Take" />
</p>
*@

<p>
    <button @onclick="HandleSubmit">検索</button>
</p>

@if (_model.Stages != null)
{
    <h2>見つかったステージ</h2>
    <table>
        <tr>
            <th>合計統率力</th>
            <th>ステージ1</th>
            <th>ステージ2</th>
            <th>ステージ3</th>
        </tr>
        @foreach (var x in _model.Stages)
        {
            <tr>
                <td>
                    <span class="energy">@x.Energy()</span>
                </td>
            @foreach (var stage in x.Entries)
            {
                <td>
                    <span class="section">
                        @(stage.SectionId)章 @stage.Section.Name
                    </span>
                    <br/>
                    <span class="stage">
                        @(stage.StageId). @stage.Stage.Name
                    </span>
                        <span class="energy">
                        (@stage.Energy())
                    </span>
                </td>
            }
            </tr>
        }
    </table>
}

@code {
    private StageFinderModel _model = default!;

    protected override void OnInitialized()
    {
        _model = new(finder);
        base.OnInitialized();
    }

    private void HandleSubmit()
    {
        _model.Find();
    }
}

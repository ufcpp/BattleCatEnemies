using System.Text;

namespace BattleCatModels.Japanese;

internal class Romaji
{
    public static string Convert(ReadOnlySpan<char> roma)
    {
        var buffer = (stackalloc char[roma.Length]);
        roma.ToLowerInvariant(buffer);

        var kana = new StringBuilder();
        Convert(buffer, kana);
        return kana.ToString();
    }

    private static void Convert(ReadOnlySpan<char> roma, StringBuilder kana)
    {
        while (true)
        {
            if (roma.Length == 0) return;

            var r = FindNext(roma);
            r.AppendTo(roma, kana);
            roma = roma[r.Length..];
        }
    }

    private record struct FindResult(int Skip, int Match, string? Kana)
    {
        public int Length => Skip + int.Max(Match, 0);

        internal void AppendTo(ReadOnlySpan<char> roma, StringBuilder kana, bool debug = false)
        {
            var (skip, len, x) = this;

            if (debug) kana.Append($"{roma[..Length]} / \"");

            if (x is { } s)
            {
                if (skip > 0)
                {
                    kana.Append(roma[..(skip - 1)]);
                    if (roma[skip - 1] == 'n') kana.Append("ん"); // nka, nsa, ... みたいなの
                    else if (roma[skip - 1] == roma[skip]) kana.Append("っ"); // kka, ssa, ... みたいなの
                    else kana.Append(roma[skip - 1]);
                }
                kana.Append(s);
            }
            else
            {
                foreach (var c in roma[..Length])
                {
                    if (c is ' ') continue; // スペースは消しとく
                    if (c is 'n') kana.Append('ん');
                    else kana.Append(c);
                }
            }
            if (debug)
            {
                kana.Append('\"');
                kana.AppendLine();
            }
        }
    }

    private static FindResult FindNext(ReadOnlySpan<char> roma)
    {
        for (int i = 0; i < roma.Length; i++)
        {
            var (len, kana) = Match(roma[i..]);
            if (len != -1) return new(i, len, kana);
            if (!char.IsAsciiLetter(roma[i])) return new(i, 1, null);
        }
        return new(roma.Length, -1, null);
    }

    public static (int len, string? kana) Match(ReadOnlySpan<char> roma) => roma switch
    {
        [] => (0, null),
        ['a', ..] => (1, "あ"),
        ['i', ..] => (1, "い"),
        ['u', ..] => (1, "う"),
        ['e', ..] => (1, "え"),
        ['o', ..] => (1, "お"),
        ['x', 'a', ..] => (2, "ぁ"),
        ['x', 'i', ..] => (2, "ぃ"),
        ['x', 'u', ..] => (2, "ぅ"),
        ['x', 'e', ..] => (2, "ぇ"),
        ['x', 'o', ..] => (2, "ぉ"),
        ['x', 'y', 'a', ..] => (3, "ゃ"),
        ['x', 'y', 'i', ..] => (3, "ぃ"),
        ['x', 'y', 'u', ..] => (3, "ゅ"),
        ['x', 'y', 'e', ..] => (3, "ぇ"),
        ['x', 'y', 'o', ..] => (3, "ょ"),
        ['x', 'k', 'a', ..] => (3, "ゕ"),
        ['x', 'k', 'e', ..] => (3, "ゖ"),
        ['x', 'w', 'a', ..] => (3, "ゎ"),
        ['l', 'a', ..] => (2, "ぁ"),
        ['l', 'i', ..] => (2, "ぃ"),
        ['l', 'u', ..] => (2, "ぅ"),
        ['l', 'e', ..] => (2, "ぇ"),
        ['l', 'o', ..] => (2, "ぉ"),
        ['l', 'y', 'a', ..] => (3, "ゃ"),
        ['l', 'y', 'i', ..] => (3, "ぃ"),
        ['l', 'y', 'u', ..] => (3, "ゅ"),
        ['l', 'y', 'e', ..] => (3, "ぇ"),
        ['l', 'y', 'o', ..] => (3, "ょ"),
        ['l', 'k', 'a', ..] => (3, "ゕ"),
        ['l', 'k', 'e', ..] => (3, "ゖ"),
        ['l', 'w', 'a', ..] => (3, "ゎ"),
        ['k', 'a', ..] => (2, "か"),
        ['k', 'i', ..] => (2, "き"),
        ['k', 'u', ..] => (2, "く"),
        ['k', 'e', ..] => (2, "け"),
        ['k', 'o', ..] => (2, "こ"),
        ['k', 'y', 'a', ..] => (3, "きゃ"),
        ['k', 'y', 'i', ..] => (3, "きぃ"),
        ['k', 'y', 'u', ..] => (3, "きゅ"),
        ['k', 'y', 'e', ..] => (3, "きぇ"),
        ['k', 'y', 'o', ..] => (3, "きょ"),
        ['g', 'a', ..] => (2, "が"),
        ['g', 'i', ..] => (2, "ぎ"),
        ['g', 'u', ..] => (2, "ぐ"),
        ['g', 'e', ..] => (2, "げ"),
        ['g', 'o', ..] => (2, "ご"),
        ['g', 'y', 'a', ..] => (3, "ぎゃ"),
        ['g', 'y', 'i', ..] => (3, "ぎぃ"),
        ['g', 'y', 'u', ..] => (3, "ぎゅ"),
        ['g', 'y', 'e', ..] => (3, "ぎぇ"),
        ['g', 'y', 'o', ..] => (3, "ぎょ"),
        ['g', 'w', 'a', ..] => (3, "ぐぁ"),
        ['g', 'w', 'i', ..] => (3, "ぐぃ"),
        ['g', 'w', 'u', ..] => (3, "ぐぅ"),
        ['g', 'w', 'e', ..] => (3, "ぐぇ"),
        ['g', 'w', 'o', ..] => (3, "ぐぉ"),
        ['c', 'a', ..] => (2, "か"),
        ['c', 'i', ..] => (2, "し"),
        ['c', 'u', ..] => (2, "く"),
        ['c', 'e', ..] => (2, "せ"),
        ['c', 'o', ..] => (2, "こ"),
        ['c', 'h', 'a', ..] => (3, "ちゃ"),
        ['c', 'h', 'i', ..] => (3, "ち"),
        ['c', 'h', 'u', ..] => (3, "ちゅ"),
        ['c', 'h', 'e', ..] => (3, "ちぇ"),
        ['c', 'h', 'o', ..] => (3, "ちょ"),
        ['c', 'y', 'a', ..] => (3, "ちゃ"),
        ['c', 'y', 'i', ..] => (3, "ちぃ"),
        ['c', 'y', 'u', ..] => (3, "ちゅ"),
        ['c', 'y', 'e', ..] => (3, "ちぇ"),
        ['c', 'y', 'o', ..] => (3, "ちょ"),
        ['q', 'a', ..] => (2, "くぁ"),
        ['q', 'i', ..] => (2, "くぃ"),
        ['q', 'u', ..] => (2, "く"),
        ['q', 'e', ..] => (2, "くぇ"),
        ['q', 'o', ..] => (2, "くぉ"),
        ['q', 'y', 'a', ..] => (3, "くゃ"),
        ['q', 'y', 'i', ..] => (3, "くぃ"),
        ['q', 'y', 'u', ..] => (3, "くゅ"),
        ['q', 'y', 'e', ..] => (3, "くぇ"),
        ['q', 'y', 'o', ..] => (3, "くょ"),
        ['q', 'w', 'a', ..] => (3, "くぁ"),
        ['q', 'w', 'i', ..] => (3, "くぃ"),
        ['q', 'w', 'u', ..] => (3, "くぅ"),
        ['q', 'w', 'e', ..] => (3, "くぇ"),
        ['q', 'w', 'o', ..] => (3, "くぉ"),
        ['s', 'a', ..] => (2, "さ"),
        ['s', 'i', ..] => (2, "し"),
        ['s', 'u', ..] => (2, "す"),
        ['s', 'e', ..] => (2, "せ"),
        ['s', 'o', ..] => (2, "そ"),
        ['s', 'h', 'a', ..] => (3, "しゃ"),
        ['s', 'h', 'i', ..] => (3, "し"),
        ['s', 'h', 'u', ..] => (3, "しゅ"),
        ['s', 'h', 'e', ..] => (3, "しぇ"),
        ['s', 'h', 'o', ..] => (3, "しょ"),
        ['s', 'y', 'a', ..] => (3, "しゃ"),
        ['s', 'y', 'i', ..] => (3, "しぃ"),
        ['s', 'y', 'u', ..] => (3, "しゅ"),
        ['s', 'y', 'e', ..] => (3, "しぇ"),
        ['s', 'y', 'o', ..] => (3, "しょ"),
        ['s', 'w', 'a', ..] => (3, "すぁ"),
        ['s', 'w', 'i', ..] => (3, "すぃ"),
        ['s', 'w', 'u', ..] => (3, "すぅ"),
        ['s', 'w', 'e', ..] => (3, "すぇ"),
        ['s', 'w', 'o', ..] => (3, "すぉ"),
        ['z', 'a', ..] => (2, "ざ"),
        ['z', 'i', ..] => (2, "じ"),
        ['z', 'u', ..] => (2, "ず"),
        ['z', 'e', ..] => (2, "ぜ"),
        ['z', 'o', ..] => (2, "ぞ"),
        ['z', 'y', 'a', ..] => (3, "じゃ"),
        ['z', 'y', 'i', ..] => (3, "じぃ"),
        ['z', 'y', 'u', ..] => (3, "じゅ"),
        ['z', 'y', 'e', ..] => (3, "じぇ"),
        ['z', 'y', 'o', ..] => (3, "じょ"),
        ['j', 'a', ..] => (2, "じゃ"),
        ['j', 'i', ..] => (2, "じ"),
        ['j', 'u', ..] => (2, "じゅ"),
        ['j', 'e', ..] => (2, "じぇ"),
        ['j', 'o', ..] => (2, "じょ"),
        ['j', 'y', 'a', ..] => (3, "じゃ"),
        ['j', 'y', 'i', ..] => (3, "じぃ"),
        ['j', 'y', 'u', ..] => (3, "じゅ"),
        ['j', 'y', 'e', ..] => (3, "じぇ"),
        ['j', 'y', 'o', ..] => (3, "じょ"),
        ['t', 'a', ..] => (2, "た"),
        ['t', 'i', ..] => (2, "ち"),
        ['t', 'u', ..] => (2, "つ"),
        ['t', 'e', ..] => (2, "て"),
        ['t', 'o', ..] => (2, "と"),
        ['t', 's', 'a', ..] => (3, "つぁ"),
        ['t', 's', 'i', ..] => (3, "つぃ"),
        ['t', 's', 'u', ..] => (3, "つ"),
        ['t', 's', 'e', ..] => (3, "つぇ"),
        ['t', 's', 'o', ..] => (3, "つぉ"),
        ['t', 'h', 'a', ..] => (3, "てゃ"),
        ['t', 'h', 'i', ..] => (3, "てぃ"),
        ['t', 'h', 'u', ..] => (3, "てゅ"),
        ['t', 'h', 'e', ..] => (3, "てぇ"),
        ['t', 'h', 'o', ..] => (3, "てょ"),
        ['t', 'y', 'a', ..] => (3, "ちゃ"),
        ['t', 'y', 'i', ..] => (3, "ちぃ"),
        ['t', 'y', 'u', ..] => (3, "ちゅ"),
        ['t', 'y', 'e', ..] => (3, "ちぇ"),
        ['t', 'y', 'o', ..] => (3, "ちょ"),
        ['t', 'w', 'a', ..] => (3, "とぁ"),
        ['t', 'w', 'i', ..] => (3, "とぃ"),
        ['t', 'w', 'u', ..] => (3, "とぅ"),
        ['t', 'w', 'e', ..] => (3, "とぇ"),
        ['t', 'w', 'o', ..] => (3, "とぉ"),
        ['d', 'a', ..] => (2, "だ"),
        ['d', 'i', ..] => (2, "ぢ"),
        ['d', 'u', ..] => (2, "づ"),
        ['d', 'e', ..] => (2, "で"),
        ['d', 'o', ..] => (2, "ど"),
        ['d', 'h', 'a', ..] => (3, "でゃ"),
        ['d', 'h', 'i', ..] => (3, "でぃ"),
        ['d', 'h', 'u', ..] => (3, "でゅ"),
        ['d', 'h', 'e', ..] => (3, "でぇ"),
        ['d', 'h', 'o', ..] => (3, "でょ"),
        ['d', 'y', 'a', ..] => (3, "ぢゃ"),
        ['d', 'y', 'i', ..] => (3, "ぢぃ"),
        ['d', 'y', 'u', ..] => (3, "ぢゅ"),
        ['d', 'y', 'e', ..] => (3, "ぢぇ"),
        ['d', 'y', 'o', ..] => (3, "ぢょ"),
        ['d', 'w', 'a', ..] => (3, "どぁ"),
        ['d', 'w', 'i', ..] => (3, "どぃ"),
        ['d', 'w', 'u', ..] => (3, "どぅ"),
        ['d', 'w', 'e', ..] => (3, "どぇ"),
        ['d', 'w', 'o', ..] => (3, "どぉ"),
        ['n', 'a', ..] => (2, "な"),
        ['n', 'i', ..] => (2, "に"),
        ['n', 'u', ..] => (2, "ぬ"),
        ['n', 'e', ..] => (2, "ね"),
        ['n', 'o', ..] => (2, "の"),
        ['n', 'y', 'a', ..] => (3, "にゃ"),
        ['n', 'y', 'i', ..] => (3, "にぃ"),
        ['n', 'y', 'u', ..] => (3, "にゅ"),
        ['n', 'y', 'e', ..] => (3, "にぇ"),
        ['n', 'y', 'o', ..] => (3, "にょ"),
        ['h', 'a', ..] => (2, "は"),
        ['h', 'i', ..] => (2, "ひ"),
        ['h', 'u', ..] => (2, "ふ"),
        ['h', 'e', ..] => (2, "へ"),
        ['h', 'o', ..] => (2, "ほ"),
        ['h', 'y', 'a', ..] => (3, "ひゃ"),
        ['h', 'y', 'i', ..] => (3, "ひぃ"),
        ['h', 'y', 'u', ..] => (3, "ひゅ"),
        ['h', 'y', 'e', ..] => (3, "ひぇ"),
        ['h', 'y', 'o', ..] => (3, "ひょ"),
        ['f', 'a', ..] => (2, "ふぁ"),
        ['f', 'i', ..] => (2, "ふぃ"),
        ['f', 'u', ..] => (2, "ふ"),
        ['f', 'e', ..] => (2, "ふぇ"),
        ['f', 'o', ..] => (2, "ふぉ"),
        ['f', 'y', 'a', ..] => (3, "ふゃ"),
        ['f', 'y', 'i', ..] => (3, "ふぃ"),
        ['f', 'y', 'u', ..] => (3, "ふゅ"),
        ['f', 'y', 'e', ..] => (3, "ふぇ"),
        ['f', 'y', 'o', ..] => (3, "ふょ"),
        ['f', 'w', 'a', ..] => (3, "ふぁ"),
        ['f', 'w', 'i', ..] => (3, "ふぃ"),
        ['f', 'w', 'u', ..] => (3, "ふぅ"),
        ['f', 'w', 'e', ..] => (3, "ふぇ"),
        ['f', 'w', 'o', ..] => (3, "ふぉ"),
        ['b', 'a', ..] => (2, "ば"),
        ['b', 'i', ..] => (2, "び"),
        ['b', 'u', ..] => (2, "ぶ"),
        ['b', 'e', ..] => (2, "べ"),
        ['b', 'o', ..] => (2, "ぼ"),
        ['b', 'y', 'a', ..] => (3, "びゃ"),
        ['b', 'y', 'i', ..] => (3, "びぃ"),
        ['b', 'y', 'u', ..] => (3, "びゅ"),
        ['b', 'y', 'e', ..] => (3, "びぇ"),
        ['b', 'y', 'o', ..] => (3, "びょ"),
        ['v', 'a', ..] => (2, "ゔぁ"),
        ['v', 'i', ..] => (2, "ゔぃ"),
        ['v', 'u', ..] => (2, "ゔ"),
        ['v', 'e', ..] => (2, "ゔぇ"),
        ['v', 'o', ..] => (2, "ゔぉ"),
        ['v', 'y', 'a', ..] => (3, "ゔゃ"),
        ['v', 'y', 'i', ..] => (3, "ゔぃ"),
        ['v', 'y', 'u', ..] => (3, "ゔゅ"),
        ['v', 'y', 'e', ..] => (3, "ゔぇ"),
        ['v', 'y', 'o', ..] => (3, "ゔょ"),
        ['p', 'a', ..] => (2, "ぱ"),
        ['p', 'i', ..] => (2, "ぴ"),
        ['p', 'u', ..] => (2, "ぷ"),
        ['p', 'e', ..] => (2, "ぺ"),
        ['p', 'o', ..] => (2, "ぽ"),
        ['p', 'y', 'a', ..] => (3, "ぴゃ"),
        ['p', 'y', 'i', ..] => (3, "ぴぃ"),
        ['p', 'y', 'u', ..] => (3, "ぴゅ"),
        ['p', 'y', 'e', ..] => (3, "ぴぇ"),
        ['p', 'y', 'o', ..] => (3, "ぴょ"),
        ['m', 'a', ..] => (2, "ま"),
        ['m', 'i', ..] => (2, "み"),
        ['m', 'u', ..] => (2, "む"),
        ['m', 'e', ..] => (2, "め"),
        ['m', 'o', ..] => (2, "も"),
        ['m', 'y', 'a', ..] => (3, "みゃ"),
        ['m', 'y', 'i', ..] => (3, "みぃ"),
        ['m', 'y', 'u', ..] => (3, "みゅ"),
        ['m', 'y', 'e', ..] => (3, "みぇ"),
        ['m', 'y', 'o', ..] => (3, "みょ"),
        ['y', 'a', ..] => (2, "や"),
        ['y', 'i', ..] => (2, "い"),
        ['y', 'u', ..] => (2, "ゆ"),
        ['y', 'e', ..] => (2, "いぇ"),
        ['y', 'o', ..] => (2, "よ"),
        ['r', 'a', ..] => (2, "ら"),
        ['r', 'i', ..] => (2, "り"),
        ['r', 'u', ..] => (2, "る"),
        ['r', 'e', ..] => (2, "れ"),
        ['r', 'o', ..] => (2, "ろ"),
        ['r', 'y', 'a', ..] => (3, "りゃ"),
        ['r', 'y', 'i', ..] => (3, "りぃ"),
        ['r', 'y', 'u', ..] => (3, "りゅ"),
        ['r', 'y', 'e', ..] => (3, "りぇ"),
        ['r', 'y', 'o', ..] => (3, "りょ"),
        ['w', 'a', ..] => (2, "わ"),
        ['w', 'i', ..] => (2, "うぃ"),
        ['w', 'u', ..] => (2, "う"),
        ['w', 'e', ..] => (2, "うぇ"),
        ['w', 'o', ..] => (2, "を"),
        ['w', 'h', 'a', ..] => (3, "うぁ"),
        ['w', 'h', 'i', ..] => (3, "うぃ"),
        ['w', 'h', 'u', ..] => (3, "う"),
        ['w', 'h', 'e', ..] => (3, "うぇ"),
        ['w', 'h', 'o', ..] => (3, "うぉ"),
        ['n', 'n', ..] => (2, "ん"),
        ['x', 'n', ..] => (2, "ん"),
        ['-', ..] => (1, "ー"),
        _ => (-1, null),
    };
}
